package com.mazanov.rick_and_mortyimport kotlinx.coroutines.CoroutineScopeimport kotlinx.coroutines.Dispatchersimport kotlinx.coroutines.delayimport kotlinx.coroutines.flow.MutableSharedFlowimport kotlinx.coroutines.launchsuspend fun main() {    val myFlow = MutableSharedFlow<Int>()    val coroutine = CoroutineScope(Dispatchers.IO)  coroutine.launch {        repeat(100) {            println("Emitted $it")            myFlow.emit(it)            delay(1000)        }    }    val job = coroutine.launch {        myFlow.collect{            println(it)        }    }   // job.join()}