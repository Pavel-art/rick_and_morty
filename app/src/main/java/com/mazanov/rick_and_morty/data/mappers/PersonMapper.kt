package com.mazanov.rick_and_morty.data.mappersimport com.mazanov.rick_and_morty.data.dto.*import com.mazanov.rick_and_morty.domain.models.*class PersonMapper {    fun mapResultDtoToResultFromApi(response: ResultDto) : ResultFromApi {        return ResultFromApi( personList = mapResponseToListPersonModel(response.results))    }    private fun mapResponseToListPersonModel(response: List<PersonModelDto>): List<PersonModel> {        val result = mutableListOf<PersonModel>()        for (person in response) {            val personModel = PersonModel(                created = person.created,                episode = person.episode,                id = person.id,                image = person.image,                location = mapResponseToLocationDto(person.location),                name = person.name,                origin = mapResponseToOriginDto(person.origin),                species = person.species,                status = person.status,                url = person.url            )            result.add(personModel)        }        return result    }} fun mapResponseToLocationDto(locationDto: LocationDto): Location {    return Location(        name = locationDto.name,        url = locationDto.url    )}private fun mapResponseToOriginDto(originDto: OriginDto): Origin {    return Origin(        name = originDto.name,        url = originDto.url    )}