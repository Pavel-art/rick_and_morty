package com.mazanov.rick_and_morty.data.local_data_source.databaseimport android.app.Applicationimport android.content.Contextimport androidx.room.Databaseimport androidx.room.Roomimport androidx.room.RoomDatabaseimport androidx.room.TypeConvertersimport com.mazanov.rick_and_morty.data.local_data_source.converters.EpisodeTypeConverterimport com.mazanov.rick_and_morty.data.local_data_source.dao.PersonDaoimport com.mazanov.rick_and_morty.data.local_data_source.entitys.PersonModelEntity@Database(entities = [PersonModelEntity::class], version = 1, exportSchema = false)@TypeConverters(EpisodeTypeConverter::class)abstract class AppDatabase : RoomDatabase() {    abstract fun personDao(): PersonDao    companion object {        private var INSTANCE: AppDatabase? = null        private val LOCK = Any()        private const val DB_NAME = "persons_local.db"        fun getInstance(context: Context): AppDatabase {            INSTANCE?.let { return it }            synchronized(LOCK) {                INSTANCE?.let { return it }            }            val db = Room.databaseBuilder(                context,                AppDatabase::class.java,                DB_NAME            ).build()            INSTANCE = db            return db        }    }}