package com.mazanov.rick_and_morty.data.local_data_source.mapperimport com.mazanov.rick_and_morty.data.local_data_source.entitys.LocationEntityimport com.mazanov.rick_and_morty.data.local_data_source.entitys.OriginEntityimport com.mazanov.rick_and_morty.data.local_data_source.entitys.PersonModelEntityimport com.mazanov.rick_and_morty.domain.models.Locationimport com.mazanov.rick_and_morty.domain.models.Originimport com.mazanov.rick_and_morty.domain.models.PersonModelimport javax.inject.Injectclass PersonMapperLocal @Inject constructor() {    fun mapDbEntityToListModels(persons: List<PersonModelEntity>): List<PersonModel> {        val result = mutableListOf<PersonModel>()        for (person in persons) {            val personModel = PersonModel(                created = person.created,                episode = person.episode,                id = person.id,                image = person.image,                location = mapLocationEntityToLocation(person.location),                name = person.name,                origin = mapOriginEntityToOrigin(person.origin),                species = person.species,                status = person.status,                url = person.url,                gender = person.gender            )            result.add(personModel)        }        return result    }    private fun mapLocationEntityToLocation(location: LocationEntity): Location =        Location(            name = location.name,            url = location.url        )    private fun mapOriginEntityToOrigin(origin: OriginEntity): Origin =        Origin(            name = origin.name,            url = origin.url        )    fun mapModelToDbEntity(person: PersonModel): PersonModelEntity =        PersonModelEntity(            created = person.created,            episode = person.episode,            id = person.id,            image = person.image,            location = mapLocationModelToDbLocationEntity(person.location),            name = person.name,            origin = mapOriginModelToDbOriginEntity(person.origin),            species = person.species,            status = person.status,            url = person.url,            gender = person.gender        )    private fun mapLocationModelToDbLocationEntity(location: Location): LocationEntity =        LocationEntity(            name = location.name,            url = location.url        )    private fun mapOriginModelToDbOriginEntity(origin: Origin): OriginEntity =        OriginEntity(            name = origin.name,            url = origin.url        )}